// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            HtmlEdit uILoginfmtEdit = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UILoginfmtEdit;
            HtmlDiv uIEmailorphonePane = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UIEmailorphonePane;
            HtmlDiv uIPasswordPane = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UIPasswordPane;
            HtmlDiv uIPasswordPane1 = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UIPasswordPane1.UIPasswordPane;
            HtmlDocument uICodedUIworkswithchroDocument = this.UISignintoyourMicrosofWindow.UICodedUIworkswithchroDocument;
            HtmlDiv uISigninPane = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UISigninPane;
            HtmlEdit uIPasswdEdit = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UIPasswdEdit;
            WinListItem uIVtazhohotmailcomListItem = this.UIAutoSuggestDropDownWindow.UIAutoSuggestDropDownWindow1.UIItemList.UIVtazhohotmailcomListItem;
            HtmlLabel uIKeepmesignedinLabel = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UIKeepmesignedinLabel;
            HtmlCustom uIF1Custom = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UIF1Custom;
            HtmlInputButton uISigninButton = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UISigninButton;
            HtmlDiv uIThatMicrosoftaccountPane = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument2.UISignInTDPane.UIThatMicrosoftaccountPane;
            HtmlDiv uICantaccessyouraccounPane = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument2.UIF1Custom.UICantaccessyouraccounPane;
            HtmlCustom uIF1Custom1 = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument2.UIF1Custom;
            HtmlDiv uIIdTd_PWD_SubmitCancePane = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument2.UIIdTd_PWD_SubmitCancePane;
            HtmlDiv uIPasswordPane2 = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument2.UIPasswordPane;
            HtmlEdit uILoginfmtEdit1 = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument2.UILoginfmtEdit;
            HtmlDiv uIEmailorphonePane1 = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument2.UIEmailorphonePane;
            HtmlEdit uIPasswdEdit1 = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument2.UIPasswdEdit;
            HtmlLabel uIKeepmesignedinLabel1 = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument2.UIKeepmesignedinLabel;
            HtmlInputButton uISigninButton1 = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument2.UISigninButton;
            #endregion

            // Click 'loginfmt' text box
            Mouse.Click(uILoginfmtEdit, new Point(162, 14));

            // Click 'loginfmt' text box
            Mouse.Click(uILoginfmtEdit, new Point(157, 18));

            // Click 'Email or phone' pane
            Mouse.Click(uIEmailorphonePane, new Point(10, 11));

            // Type 'v-tazho@hotmail.com' in 'loginfmt' text box
            uILoginfmtEdit.Text = this.RecordedMethod1Params.UILoginfmtEditText;

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'loginfmt' text box at (1, 1)
            Mouse.Hover(uILoginfmtEdit, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Password' pane
            Mouse.Click(uIPasswordPane, new Point(72, 15));

            // Type '{Back}' in 'Password' pane
            Keyboard.SendKeys(uIPasswordPane1, this.RecordedMethod1Params.UIPasswordPaneSendKeys, ModifierKeys.None);

            // Type '{Back}' in 'Coded UI works with chrome and firefox but not IE' document
            Keyboard.SendKeys(uICodedUIworkswithchroDocument, this.RecordedMethod1Params.UICodedUIworkswithchroDocumentSendKeys, ModifierKeys.None);

            // Type '{Back}' in 'Coded UI works with chrome and firefox but not IE' document
            Keyboard.SendKeys(uICodedUIworkswithchroDocument, this.RecordedMethod1Params.UICodedUIworkswithchroDocumentSendKeys1, ModifierKeys.None);

            // Type '{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}' in 'loginfmt' text box
            Keyboard.SendKeys(uILoginfmtEdit, this.RecordedMethod1Params.UILoginfmtEditSendKeys, ModifierKeys.None);

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Sign in' pane at (1, 1)
            Mouse.Hover(uISigninPane, new Point(1, 1));

            // Mouse hover 'passwd' text box at (1, 1)
            Mouse.Hover(uIPasswdEdit, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'v-tazho@hotmail.com' list item
            Mouse.Click(uIVtazhohotmailcomListItem, new Point(114, 14));

            // Type '********' in 'passwd' text box
            uIPasswdEdit.Password = this.RecordedMethod1Params.UIPasswdEditPassword;

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Keep me signed in' label at (1, 1)
            Mouse.Hover(uIKeepmesignedinLabel, new Point(1, 1));

            // Mouse hover 'f1' custom control at (1, 1)
            Mouse.Hover(uIF1Custom, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Sign in' button
            Mouse.Click(uISigninButton, new Point(47, 20));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'That Microsoft account doesn't exist. En' pane at (1, 1)
            Mouse.Hover(uIThatMicrosoftaccountPane, new Point(1, 1));

            // Mouse hover 'Can't access your account? Sign in wi' pane at (1, 1)
            Mouse.Hover(uICantaccessyouraccounPane, new Point(1, 1));

            // Mouse hover 'f1' custom control at (1, 1)
            Mouse.Hover(uIF1Custom1, new Point(1, 1));

            // Mouse hover 'idTd_PWD_SubmitCancelTbl' pane at (1, 1)
            Mouse.Hover(uIIdTd_PWD_SubmitCancePane, new Point(1, 1));

            // Mouse hover 'Password' pane at (1, 1)
            Mouse.Hover(uIPasswordPane2, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'loginfmt' text box
            Mouse.Click(uILoginfmtEdit1, new Point(142, 8));

            // Click 'Email or phone' pane
            Mouse.Click(uIEmailorphonePane1, new Point(16, 11));

            // Type 'v-tazho@hotmail.com' in 'loginfmt' text box
            uILoginfmtEdit1.Text = this.RecordedMethod1Params.UILoginfmtEditText1;

            // Type '{Tab}' in 'loginfmt' text box
            Keyboard.SendKeys(uILoginfmtEdit1, this.RecordedMethod1Params.UILoginfmtEditSendKeys1, ModifierKeys.None);

            // Type '********' in 'passwd' text box
            uIPasswdEdit1.Password = this.RecordedMethod1Params.UIPasswdEditPassword1;

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'loginfmt' text box at (1, 1)
            Mouse.Hover(uILoginfmtEdit1, new Point(1, 1));

            // Mouse hover 'Keep me signed in' label at (1, 1)
            Mouse.Hover(uIKeepmesignedinLabel1, new Point(1, 1));

            // Mouse hover 'Sign in' button at (1, 1)
            Mouse.Hover(uISigninButton1, new Point(1, 1));

            // Mouse hover 'f1' custom control at (1, 1)
            Mouse.Hover(uIF1Custom1, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Sign in' button
            Mouse.Click(uISigninButton1, new Point(38, 16));
        }
        
        /// <summary>
        /// RecordedMethod2 - Use 'RecordedMethod2Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            HtmlDiv uIMicrosoftaccountWhatPane = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UISignInTDPane.UIMicrosoftaccountWhatPane;
            HtmlCustom uIF1Custom = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UIF1Custom;
            HtmlDiv uIKeepmesignedinPane = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UIKeepmesignedinPane;
            HtmlEdit uILoginfmtEdit = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UILoginfmtEdit;
            HtmlDiv uIItemPane = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UISignInTDPane.UIItemPane;
            HtmlEdit uIPasswdEdit = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UIPasswdEdit;
            HtmlLabel uIKeepmesignedinLabel = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UIKeepmesignedinLabel;
            HtmlInputButton uISigninButton = this.UISignintoyourMicrosofWindow.UISignintoyourMicrosofDocument.UISigninButton;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Microsoft account What's this?' pane at (1, 1)
            Mouse.Hover(uIMicrosoftaccountWhatPane, new Point(1, 1));

            // Mouse hover 'f1' custom control at (1, 1)
            Mouse.Hover(uIF1Custom, new Point(1, 1));

            // Mouse hover 'Keep me signed in' pane at (1, 1)
            Mouse.Hover(uIKeepmesignedinPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Move 'loginfmt' text box to pane
            uIItemPane.EnsureClickable(new Point(89, 35));
            Mouse.StartDragging(uILoginfmtEdit, new Point(121, 13));
            Mouse.StopDragging(uIItemPane, new Point(89, 35));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Type 'v-tazho@hotmail.com' in 'loginfmt' text box
            uILoginfmtEdit.Text = this.RecordedMethod2Params.UILoginfmtEditText;

            // Type '{Tab}' in 'loginfmt' text box
            Keyboard.SendKeys(uILoginfmtEdit, this.RecordedMethod2Params.UILoginfmtEditSendKeys, ModifierKeys.None);

            // Type '********' in 'passwd' text box
            uIPasswdEdit.Password = this.RecordedMethod2Params.UIPasswdEditPassword;

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'passwd' text box at (1, 1)
            Mouse.Hover(uIPasswdEdit, new Point(1, 1));

            // Mouse hover 'Keep me signed in' label at (1, 1)
            Mouse.Hover(uIKeepmesignedinLabel, new Point(1, 1));

            // Mouse hover 'f1' custom control at (1, 1)
            Mouse.Hover(uIF1Custom, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Sign in' button
            Mouse.Click(uISigninButton, new Point(47, 11));
        }
        
        /// <summary>
        /// RecordedMethod3 - Use 'RecordedMethod3Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod3()
        {
            #region Variable Declarations
            WinCheckBox uICheckBox1CheckBox = this.UIForm1Window.UICheckBox1Window.UICheckBox1CheckBox;
            WinCheckBox uICheckBox2CheckBox = this.UIForm1Window.UICheckBox2Window.UICheckBox2CheckBox;
            WinCheckBox uICheckBox3CheckBox = this.UIForm1Window.UICheckBox3Window.UICheckBox3CheckBox;
            WinCheckBox uICheckBox4CheckBox = this.UIForm1Window.UICheckBox4Window.UICheckBox4CheckBox;
            WinCheckBox uICheckBox5CheckBox = this.UIForm1Window.UICheckBox5Window.UICheckBox5CheckBox;
            #endregion

            // Select 'checkBox1' check box
            uICheckBox1CheckBox.Checked = this.RecordedMethod3Params.UICheckBox1CheckBoxChecked;

            // Select 'checkBox2' check box
            uICheckBox2CheckBox.Checked = this.RecordedMethod3Params.UICheckBox2CheckBoxChecked;

            // Select 'checkBox3' check box
            uICheckBox3CheckBox.Checked = this.RecordedMethod3Params.UICheckBox3CheckBoxChecked;

            // Select 'checkBox4' check box
            uICheckBox4CheckBox.Checked = this.RecordedMethod3Params.UICheckBox4CheckBoxChecked;

            // Select 'checkBox5' check box
            uICheckBox5CheckBox.Checked = this.RecordedMethod3Params.UICheckBox5CheckBoxChecked;
        }
        
        /// <summary>
        /// RecordedMethod4 - Use 'RecordedMethod4Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod4()
        {
            #region Variable Declarations
            HtmlDiv uIHiMuhammadSaqibbutthPane = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIFff5f59cdfff4e72b7d5Custom.UIHiMuhammadSaqibbutthPane;
            HtmlDiv uIReplyQuoteDeletePane = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIFa5464a339424670a3c9Custom.UIReplyQuoteDeletePane;
            HtmlHyperlink uIReplyHyperlink = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIReplyHyperlink;
            HtmlHyperlink uIInsertImageHyperlink = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIFa5464a339424670a3c9Table.UIInsertImageHyperlink;
            HtmlDiv uIUploadClickUploadorDPane = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIUploadClickUploadorDPane;
            HtmlFileInput uIFileFileInput = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIFileFileInput;
            HtmlHyperlink uICloseHyperlink = this.UICodedUiInternetExploWindow.UICodedUiDocument.UICloseHyperlink;
            WinList uIItemsViewList = this.UIChooseFiletoUploadWindow.UIShellViewClient.UIItemsViewList;
            WinButton uIOpenButton = this.UIChooseFiletoUploadWindow.UIOpenWindow.UIOpenButton;
            HtmlButton uIInsertButton = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIInsertButton;
            #endregion

            // Click 'Hi MuhammadSaqib, >> but the problem' pane
            Mouse.Click(uIHiMuhammadSaqibbutthPane, new Point(248, 135));

            // The control for this action was not recorded.

            // The control for this action was not recorded.

            // Click 'Reply | Quote | Delete' pane
            Mouse.Click(uIReplyQuoteDeletePane, new Point(265, 48));

            // Click 'Reply' link
            Mouse.Click(uIReplyHyperlink, new Point(15, 13));

            // Click 'insertImage' link
            Mouse.Click(uIInsertImageHyperlink, new Point(13, 10));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Upload Click Upload or Drag and Drop to' pane at (1, 1)
            Mouse.Hover(uIUploadClickUploadorDPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Type 'C:\fakepath\1.gif' in 'file' file input
            uIFileFileInput.FileName = this.RecordedMethod4Params.UIFileFileInputFileName;

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'file' file input at (1, 1)
            Mouse.Hover(uIFileFileInput, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Close' link
            Mouse.Click(uICloseHyperlink, new Point(14, 8));

            // Click 'insertImage' link
            Mouse.Click(uIInsertImageHyperlink, new Point(18, 17));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Upload Click Upload or Drag and Drop to' pane at (1, 1)
            Mouse.Hover(uIUploadClickUploadorDPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'file' file input
            Mouse.Click(uIFileFileInput, new Point(3511, 10));

            // Select '' in 'Items View' list box
            uIItemsViewList.SelectedItemsAsString = this.RecordedMethod4Params.UIItemsViewListSelectedItemsAsString;

            // Click '&Open' button
            Mouse.Click(uIOpenButton, new Point(47, 15));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'file' file input at (1, 1)
            Mouse.Hover(uIFileFileInput, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Insert' button
            Mouse.Click(uIInsertButton, new Point(20, 14));
        }
        
        /// <summary>
        /// RecordedMethod5 - Use 'RecordedMethod5Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod5()
        {
            #region Variable Declarations
            HtmlHyperlink uIInsertImageHyperlink = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIFa5464a339424670a3c9Table.UIInsertImageHyperlink;
            HtmlDiv uIUploadClickUploadorDPane = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIUploadClickUploadorDPane;
            HtmlFileInput uIFileFileInput = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIFileFileInput;
            WinList uIItemsViewList = this.UIChooseFiletoUploadWindow.UIShellViewClient.UIItemsViewList;
            WinButton uIOpenButton = this.UIChooseFiletoUploadWindow.UIOpenWindow.UIOpenButton;
            HtmlCustom uIImageURLCustom = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIImageURLCustom;
            HtmlButton uIInsertButton = this.UICodedUiInternetExploWindow.UICodedUiDocument.UIInsertButton;
            #endregion

            // Click 'insertImage' link
            Mouse.Click(uIInsertImageHyperlink, new Point(18, 9));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Upload Click Upload or Drag and Drop to' pane at (1, 1)
            Mouse.Hover(uIUploadClickUploadorDPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'file' file input
            Mouse.Click(uIFileFileInput, new Point(3521, 9));

            // Select '' in 'Items View' list box
            uIItemsViewList.SelectedItemsAsString = this.RecordedMethod5Params.UIItemsViewListSelectedItemsAsString;

            // Click '&Open' button
            Mouse.Click(uIOpenButton, new Point(28, 8));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'file' file input at (1, 1)
            Mouse.Hover(uIFileFileInput, new Point(1, 1));

            // Mouse hover 'Image URL' custom control at (1, 1)
            Mouse.Hover(uIImageURLCustom, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Insert' button
            Mouse.Click(uIInsertButton, new Point(23, 14));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public virtual RecordedMethod3Params RecordedMethod3Params
        {
            get
            {
                if ((this.mRecordedMethod3Params == null))
                {
                    this.mRecordedMethod3Params = new RecordedMethod3Params();
                }
                return this.mRecordedMethod3Params;
            }
        }
        
        public virtual RecordedMethod4Params RecordedMethod4Params
        {
            get
            {
                if ((this.mRecordedMethod4Params == null))
                {
                    this.mRecordedMethod4Params = new RecordedMethod4Params();
                }
                return this.mRecordedMethod4Params;
            }
        }
        
        public virtual RecordedMethod5Params RecordedMethod5Params
        {
            get
            {
                if ((this.mRecordedMethod5Params == null))
                {
                    this.mRecordedMethod5Params = new RecordedMethod5Params();
                }
                return this.mRecordedMethod5Params;
            }
        }
        
        public UISignintoyourMicrosofWindow UISignintoyourMicrosofWindow
        {
            get
            {
                if ((this.mUISignintoyourMicrosofWindow == null))
                {
                    this.mUISignintoyourMicrosofWindow = new UISignintoyourMicrosofWindow();
                }
                return this.mUISignintoyourMicrosofWindow;
            }
        }
        
        public UIAutoSuggestDropDownWindow UIAutoSuggestDropDownWindow
        {
            get
            {
                if ((this.mUIAutoSuggestDropDownWindow == null))
                {
                    this.mUIAutoSuggestDropDownWindow = new UIAutoSuggestDropDownWindow();
                }
                return this.mUIAutoSuggestDropDownWindow;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        
        public UICodedUiInternetExploWindow UICodedUiInternetExploWindow
        {
            get
            {
                if ((this.mUICodedUiInternetExploWindow == null))
                {
                    this.mUICodedUiInternetExploWindow = new UICodedUiInternetExploWindow();
                }
                return this.mUICodedUiInternetExploWindow;
            }
        }
        
        public UIChooseFiletoUploadWindow UIChooseFiletoUploadWindow
        {
            get
            {
                if ((this.mUIChooseFiletoUploadWindow == null))
                {
                    this.mUIChooseFiletoUploadWindow = new UIChooseFiletoUploadWindow();
                }
                return this.mUIChooseFiletoUploadWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private RecordedMethod3Params mRecordedMethod3Params;
        
        private RecordedMethod4Params mRecordedMethod4Params;
        
        private RecordedMethod5Params mRecordedMethod5Params;
        
        private UISignintoyourMicrosofWindow mUISignintoyourMicrosofWindow;
        
        private UIAutoSuggestDropDownWindow mUIAutoSuggestDropDownWindow;
        
        private UIForm1Window mUIForm1Window;
        
        private UICodedUiInternetExploWindow mUICodedUiInternetExploWindow;
        
        private UIChooseFiletoUploadWindow mUIChooseFiletoUploadWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'v-tazho@hotmail.com' in 'loginfmt' text box
        /// </summary>
        public string UILoginfmtEditText = "v-tazho@hotmail.com";
        
        /// <summary>
        /// Type '{Back}' in 'Password' pane
        /// </summary>
        public string UIPasswordPaneSendKeys = "{Back}";
        
        /// <summary>
        /// Type '{Back}' in 'Coded UI works with chrome and firefox but not IE' document
        /// </summary>
        public string UICodedUIworkswithchroDocumentSendKeys = "{Back}";
        
        /// <summary>
        /// Type '{Back}' in 'Coded UI works with chrome and firefox but not IE' document
        /// </summary>
        public string UICodedUIworkswithchroDocumentSendKeys1 = "{Back}";
        
        /// <summary>
        /// Type '{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}' in 'loginfmt' text box
        /// </summary>
        public string UILoginfmtEditSendKeys = "{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}";
        
        /// <summary>
        /// Type '********' in 'passwd' text box
        /// </summary>
        public string UIPasswdEditPassword = "LHpHaG/08GwygdWvnECCBse+ksWkYYJ+";
        
        /// <summary>
        /// Type 'v-tazho@hotmail.com' in 'loginfmt' text box
        /// </summary>
        public string UILoginfmtEditText1 = "v-tazho@hotmail.com";
        
        /// <summary>
        /// Type '{Tab}' in 'loginfmt' text box
        /// </summary>
        public string UILoginfmtEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'passwd' text box
        /// </summary>
        public string UIPasswdEditPassword1 = "LHpHaG/08GwygdWvnECCBse+ksWkYYJ+";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'v-tazho@hotmail.com' in 'loginfmt' text box
        /// </summary>
        public string UILoginfmtEditText = "v-tazho@hotmail.com";
        
        /// <summary>
        /// Type '{Tab}' in 'loginfmt' text box
        /// </summary>
        public string UILoginfmtEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'passwd' text box
        /// </summary>
        public string UIPasswdEditPassword = "LHpHaG/08GwygdWvnECCBse+ksWkYYJ+";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedMethod3Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'checkBox1' check box
        /// </summary>
        public bool UICheckBox1CheckBoxChecked = true;
        
        /// <summary>
        /// Select 'checkBox2' check box
        /// </summary>
        public bool UICheckBox2CheckBoxChecked = true;
        
        /// <summary>
        /// Select 'checkBox3' check box
        /// </summary>
        public bool UICheckBox3CheckBoxChecked = true;
        
        /// <summary>
        /// Select 'checkBox4' check box
        /// </summary>
        public bool UICheckBox4CheckBoxChecked = true;
        
        /// <summary>
        /// Select 'checkBox5' check box
        /// </summary>
        public bool UICheckBox5CheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedMethod4Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'C:\fakepath\1.gif' in 'file' file input
        /// </summary>
        public string UIFileFileInputFileName = "C:\\fakepath\\1.gif";
        
        /// <summary>
        /// Select '' in 'Items View' list box
        /// </summary>
        public string UIItemsViewListSelectedItemsAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedMethod5Params
    {
        
        #region Fields
        /// <summary>
        /// Select '' in 'Items View' list box
        /// </summary>
        public string UIItemsViewListSelectedItemsAsString = "";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISignintoyourMicrosofWindow : BrowserWindow
    {
        
        public UISignintoyourMicrosofWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Sign in to your Microsoft account";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Sign in to your Microsoft account");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISignintoyourMicrosofDocument UISignintoyourMicrosofDocument
        {
            get
            {
                if ((this.mUISignintoyourMicrosofDocument == null))
                {
                    this.mUISignintoyourMicrosofDocument = new UISignintoyourMicrosofDocument(this);
                }
                return this.mUISignintoyourMicrosofDocument;
            }
        }
        
        public HtmlDocument UICodedUIworkswithchroDocument
        {
            get
            {
                if ((this.mUICodedUIworkswithchroDocument == null))
                {
                    this.mUICodedUIworkswithchroDocument = new HtmlDocument(this);
                    #region Search Criteria
                    this.mUICodedUIworkswithchroDocument.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
                    this.mUICodedUIworkswithchroDocument.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
                    this.mUICodedUIworkswithchroDocument.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
                    this.mUICodedUIworkswithchroDocument.FilterProperties[HtmlDocument.PropertyNames.Title] = "Coded UI works with chrome and firefox but not IE";
                    this.mUICodedUIworkswithchroDocument.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Forums/en-US/838d6431-e6d7-4af0-8f24-191e53d372e0/coded-ui-works-with-chrome-and" +
                        "-firefox-but-not-ie";
                    this.mUICodedUIworkswithchroDocument.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://social.msdn.microsoft.com/Forums/en-US/838d6431-e6d7-4af0-8f24-191e53d372" +
                        "e0/coded-ui-works-with-chrome-and-firefox-but-not-ie?forum=vstest";
                    this.mUICodedUIworkswithchroDocument.WindowTitles.Add("Coded UI works with chrome and firefox but not IE");
                    #endregion
                }
                return this.mUICodedUIworkswithchroDocument;
            }
        }
        
        public UISignintoyourMicrosofDocument2 UISignintoyourMicrosofDocument2
        {
            get
            {
                if ((this.mUISignintoyourMicrosofDocument2 == null))
                {
                    this.mUISignintoyourMicrosofDocument2 = new UISignintoyourMicrosofDocument2(this);
                }
                return this.mUISignintoyourMicrosofDocument2;
            }
        }
        #endregion
        
        #region Fields
        private UISignintoyourMicrosofDocument mUISignintoyourMicrosofDocument;
        
        private HtmlDocument mUICodedUIworkswithchroDocument;
        
        private UISignintoyourMicrosofDocument2 mUISignintoyourMicrosofDocument2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISignintoyourMicrosofDocument : HtmlDocument
    {
        
        public UISignintoyourMicrosofDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Sign in to your Microsoft account";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/login.srf";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://login.live.com/login.srf?wa=wsignin1.0&wtrealm=social.msdn.microsoft.com&wreply=https%3a%2f%2fsocial.msdn.microsoft.com%2fForums%2fen-US%2f838d6431-e6d7-4af0-8f24-191e53d372e0%2fcoded-ui-works-with-chrome-and-firefox-but-not-ie%3fforum%3dvstest%26stoAI%3d10&wp=MBI_FED_SSL&wlcxt=microsoft%24microsoft%24microsoft";
            this.WindowTitles.Add("Sign in to your Microsoft account");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UILoginfmtEdit
        {
            get
            {
                if ((this.mUILoginfmtEdit == null))
                {
                    this.mUILoginfmtEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUILoginfmtEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "i0116";
                    this.mUILoginfmtEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "loginfmt";
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "ltr_override";
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"loginfmt\" class=\"ltr_override\" id=";
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUILoginfmtEdit.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUILoginfmtEdit;
            }
        }
        
        public HtmlDiv UIEmailorphonePane
        {
            get
            {
                if ((this.mUIEmailorphonePane == null))
                {
                    this.mUIEmailorphonePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIEmailorphonePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "idDiv_PWD_UsernameExample";
                    this.mUIEmailorphonePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIEmailorphonePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Email or phone";
                    this.mUIEmailorphonePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIEmailorphonePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "placeholder ltr_override";
                    this.mUIEmailorphonePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"placeholder ltr_override\" id=\"idDiv_PWD_UsernameExample\" aria-hidden=\"true" +
                        "\" style=\"cursor: text;\"";
                    this.mUIEmailorphonePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
                    this.mUIEmailorphonePane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIEmailorphonePane;
            }
        }
        
        public HtmlDiv UIPasswordPane
        {
            get
            {
                if ((this.mUIPasswordPane == null))
                {
                    this.mUIPasswordPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPasswordPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "idDiv_PWD_PasswordExample";
                    this.mUIPasswordPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Password";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "placeholder";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"placeholder\" id=\"idDiv_PWD_PasswordExample\" aria-hidden=\"true\" style=\"curs" +
                        "or: text;\"";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "30";
                    this.mUIPasswordPane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIPasswordPane;
            }
        }
        
        public UIPasswordPane1 UIPasswordPane1
        {
            get
            {
                if ((this.mUIPasswordPane1 == null))
                {
                    this.mUIPasswordPane1 = new UIPasswordPane1(this);
                }
                return this.mUIPasswordPane1;
            }
        }
        
        public HtmlDiv UISigninPane
        {
            get
            {
                if ((this.mUISigninPane == null))
                {
                    this.mUISigninPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "i0272";
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign in";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "signInHeader";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"signInHeader\" id=\"i0272\"";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "10";
                    this.mUISigninPane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUISigninPane;
            }
        }
        
        public HtmlEdit UIPasswdEdit
        {
            get
            {
                if ((this.mUIPasswdEdit == null))
                {
                    this.mUIPasswdEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswdEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "i0118";
                    this.mUIPasswdEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "passwd";
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"passwd\" id=\"i0118\" aria-describedb";
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswdEdit.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIPasswdEdit;
            }
        }
        
        public HtmlLabel UIKeepmesignedinLabel
        {
            get
            {
                if ((this.mUIKeepmesignedinLabel == null))
                {
                    this.mUIKeepmesignedinLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIKeepmesignedinLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "idLbl_PWD_KMSI_Cb";
                    this.mUIKeepmesignedinLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIKeepmesignedinLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "idChkBx_PWD_KMSI0Pwd";
                    this.mUIKeepmesignedinLabel.SearchProperties[HtmlLabel.PropertyNames.InnerText] = "Keep me signed in";
                    this.mUIKeepmesignedinLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIKeepmesignedinLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=\"idLbl_PWD_KMSI_Cb\" for=\"idChkBx_PWD_";
                    this.mUIKeepmesignedinLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "1";
                    this.mUIKeepmesignedinLabel.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIKeepmesignedinLabel;
            }
        }
        
        public HtmlCustom UIF1Custom
        {
            get
            {
                if ((this.mUIF1Custom == null))
                {
                    this.mUIF1Custom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIF1Custom.SearchProperties["TagName"] = "FORM";
                    this.mUIF1Custom.SearchProperties["Id"] = null;
                    this.mUIF1Custom.SearchProperties[UITestControl.PropertyNames.Name] = "f1";
                    this.mUIF1Custom.FilterProperties["Class"] = null;
                    this.mUIF1Custom.FilterProperties["ControlDefinition"] = "name=\"f1\" spellcheck=\"false\" method=\"pos";
                    this.mUIF1Custom.FilterProperties["TagInstance"] = "1";
                    this.mUIF1Custom.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIF1Custom;
            }
        }
        
        public HtmlInputButton UISigninButton
        {
            get
            {
                if ((this.mUISigninButton == null))
                {
                    this.mUISigninButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISigninButton.SearchProperties[HtmlButton.PropertyNames.Id] = "idSIButton9";
                    this.mUISigninButton.SearchProperties[HtmlButton.PropertyNames.Name] = "SI";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Sign in";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.Class] = "default";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"SI\" class=\"default\" id=\"idSIButton";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUISigninButton.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUISigninButton;
            }
        }
        
        public UISignInTDPane UISignInTDPane
        {
            get
            {
                if ((this.mUISignInTDPane == null))
                {
                    this.mUISignInTDPane = new UISignInTDPane(this);
                }
                return this.mUISignInTDPane;
            }
        }
        
        public HtmlDiv UIKeepmesignedinPane
        {
            get
            {
                if ((this.mUIKeepmesignedinPane == null))
                {
                    this.mUIKeepmesignedinPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIKeepmesignedinPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "idTd_PWD_KMSI_Cb";
                    this.mUIKeepmesignedinPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIKeepmesignedinPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Keep me signed in";
                    this.mUIKeepmesignedinPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIKeepmesignedinPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIKeepmesignedinPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"idTd_PWD_KMSI_Cb\"";
                    this.mUIKeepmesignedinPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "31";
                    this.mUIKeepmesignedinPane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIKeepmesignedinPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUILoginfmtEdit;
        
        private HtmlDiv mUIEmailorphonePane;
        
        private HtmlDiv mUIPasswordPane;
        
        private UIPasswordPane1 mUIPasswordPane1;
        
        private HtmlDiv mUISigninPane;
        
        private HtmlEdit mUIPasswdEdit;
        
        private HtmlLabel mUIKeepmesignedinLabel;
        
        private HtmlCustom mUIF1Custom;
        
        private HtmlInputButton mUISigninButton;
        
        private UISignInTDPane mUISignInTDPane;
        
        private HtmlDiv mUIKeepmesignedinPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPasswordPane1 : HtmlDiv
    {
        
        public UIPasswordPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "idDiv_PWD_PasswordTb";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Password";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "row textbox";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"row textbox\" id=\"idDiv_PWD_PasswordTb\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "27";
            this.WindowTitles.Add("Sign in to your Microsoft account");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPasswordPane
        {
            get
            {
                if ((this.mUIPasswordPane == null))
                {
                    this.mUIPasswordPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPasswordPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPasswordPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Password";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "phholder";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"phholder\" style=\"left: 0px; top: 0px; width: 100%; position: absolute; z-i" +
                        "ndex: 5;\"";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "29";
                    this.mUIPasswordPane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIPasswordPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPasswordPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISignInTDPane : HtmlDiv
    {
        
        public UISignInTDPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "signInTD";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign in\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nMicrosoft";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "floatLeft";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"floatLeft\" id=\"signInTD\" style=\"width: 420px; position: relative;\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "8";
            this.WindowTitles.Add("Sign in to your Microsoft account");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIMicrosoftaccountWhatPane
        {
            get
            {
                if ((this.mUIMicrosoftaccountWhatPane == null))
                {
                    this.mUIMicrosoftaccountWhatPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMicrosoftaccountWhatPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMicrosoftaccountWhatPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMicrosoftaccountWhatPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Microsoft account What\'s this?\r\n\r\n\r\n\r\n\r\n";
                    this.mUIMicrosoftaccountWhatPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMicrosoftaccountWhatPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "floatLeft";
                    this.mUIMicrosoftaccountWhatPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"floatLeft\" style=\"width: 320px;\"";
                    this.mUIMicrosoftaccountWhatPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
                    this.mUIMicrosoftaccountWhatPane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIMicrosoftaccountWhatPane;
            }
        }
        
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "floatLeft";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"floatLeft\" style=\"width: 100px; height: 370px;\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "12";
                    this.mUIItemPane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIMicrosoftaccountWhatPane;
        
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISignintoyourMicrosofDocument2 : HtmlDocument
    {
        
        public UISignintoyourMicrosofDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Sign in to your Microsoft account";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ppsecure/post.srf";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://login.live.com/ppsecure/post.srf?wa=wsignin1.0&wtrealm=social.msdn.microsoft.com&wreply=https%3a%2f%2fsocial.msdn.microsoft.com%2fForums%2fen-US%2f838d6431-e6d7-4af0-8f24-191e53d372e0%2fcoded-ui-works-with-chrome-and-firefox-but-not-ie%3fforum%3dvstest%26stoAI%3d10&wp=MBI_FED_SSL&wlcxt=microsoft%24microsoft%24microsoft&bk=1438074336&uaid=e252d2b4c8974c84965dc9611e4a42a4&pid=0";
            this.WindowTitles.Add("Sign in to your Microsoft account");
            #endregion
        }
        
        #region Properties
        public UISignInTDPane1 UISignInTDPane
        {
            get
            {
                if ((this.mUISignInTDPane == null))
                {
                    this.mUISignInTDPane = new UISignInTDPane1(this);
                }
                return this.mUISignInTDPane;
            }
        }
        
        public UIF1Custom UIF1Custom
        {
            get
            {
                if ((this.mUIF1Custom == null))
                {
                    this.mUIF1Custom = new UIF1Custom(this);
                }
                return this.mUIF1Custom;
            }
        }
        
        public HtmlDiv UIIdTd_PWD_SubmitCancePane
        {
            get
            {
                if ((this.mUIIdTd_PWD_SubmitCancePane == null))
                {
                    this.mUIIdTd_PWD_SubmitCancePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIIdTd_PWD_SubmitCancePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "idTd_PWD_SubmitCancelTbl";
                    this.mUIIdTd_PWD_SubmitCancePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIIdTd_PWD_SubmitCancePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIIdTd_PWD_SubmitCancePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIIdTd_PWD_SubmitCancePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "section";
                    this.mUIIdTd_PWD_SubmitCancePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"section\" id=\"idTd_PWD_SubmitCancelTbl\"";
                    this.mUIIdTd_PWD_SubmitCancePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "32";
                    this.mUIIdTd_PWD_SubmitCancePane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIIdTd_PWD_SubmitCancePane;
            }
        }
        
        public HtmlDiv UIPasswordPane
        {
            get
            {
                if ((this.mUIPasswordPane == null))
                {
                    this.mUIPasswordPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPasswordPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "idDiv_PWD_PasswordExample";
                    this.mUIPasswordPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Password";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "placeholder";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"placeholder\" id=\"idDiv_PWD_PasswordExample\" aria-hidden=\"true\" style=\"curs" +
                        "or: text;\"";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "30";
                    this.mUIPasswordPane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIPasswordPane;
            }
        }
        
        public HtmlEdit UILoginfmtEdit
        {
            get
            {
                if ((this.mUILoginfmtEdit == null))
                {
                    this.mUILoginfmtEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUILoginfmtEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "i0116";
                    this.mUILoginfmtEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "loginfmt";
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "ltr_override";
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"loginfmt\" class=\"ltr_override\" id=";
                    this.mUILoginfmtEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUILoginfmtEdit.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUILoginfmtEdit;
            }
        }
        
        public HtmlDiv UIEmailorphonePane
        {
            get
            {
                if ((this.mUIEmailorphonePane == null))
                {
                    this.mUIEmailorphonePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIEmailorphonePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "idDiv_PWD_UsernameExample";
                    this.mUIEmailorphonePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIEmailorphonePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Email or phone";
                    this.mUIEmailorphonePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIEmailorphonePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "placeholder ltr_override";
                    this.mUIEmailorphonePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"placeholder ltr_override\" id=\"idDiv_PWD_UsernameExample\" aria-hidden=\"true" +
                        "\" style=\"cursor: text;\"";
                    this.mUIEmailorphonePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
                    this.mUIEmailorphonePane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIEmailorphonePane;
            }
        }
        
        public HtmlEdit UIPasswdEdit
        {
            get
            {
                if ((this.mUIPasswdEdit == null))
                {
                    this.mUIPasswdEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswdEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "i0118";
                    this.mUIPasswdEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "passwd";
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"passwd\" id=\"i0118\" aria-describedb";
                    this.mUIPasswdEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswdEdit.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIPasswdEdit;
            }
        }
        
        public HtmlLabel UIKeepmesignedinLabel
        {
            get
            {
                if ((this.mUIKeepmesignedinLabel == null))
                {
                    this.mUIKeepmesignedinLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIKeepmesignedinLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = "idLbl_PWD_KMSI_Cb";
                    this.mUIKeepmesignedinLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIKeepmesignedinLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "idChkBx_PWD_KMSI0Pwd";
                    this.mUIKeepmesignedinLabel.SearchProperties[HtmlLabel.PropertyNames.InnerText] = "Keep me signed in";
                    this.mUIKeepmesignedinLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUIKeepmesignedinLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "id=\"idLbl_PWD_KMSI_Cb\" for=\"idChkBx_PWD_";
                    this.mUIKeepmesignedinLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "1";
                    this.mUIKeepmesignedinLabel.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIKeepmesignedinLabel;
            }
        }
        
        public HtmlInputButton UISigninButton
        {
            get
            {
                if ((this.mUISigninButton == null))
                {
                    this.mUISigninButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISigninButton.SearchProperties[HtmlButton.PropertyNames.Id] = "idSIButton9";
                    this.mUISigninButton.SearchProperties[HtmlButton.PropertyNames.Name] = "SI";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Sign in";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.Class] = "default";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"SI\" class=\"default\" id=\"idSIButton";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUISigninButton.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUISigninButton;
            }
        }
        #endregion
        
        #region Fields
        private UISignInTDPane1 mUISignInTDPane;
        
        private UIF1Custom mUIF1Custom;
        
        private HtmlDiv mUIIdTd_PWD_SubmitCancePane;
        
        private HtmlDiv mUIPasswordPane;
        
        private HtmlEdit mUILoginfmtEdit;
        
        private HtmlDiv mUIEmailorphonePane;
        
        private HtmlEdit mUIPasswdEdit;
        
        private HtmlLabel mUIKeepmesignedinLabel;
        
        private HtmlInputButton mUISigninButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISignInTDPane1 : HtmlDiv
    {
        
        public UISignInTDPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "signInTD";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign in\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nThat Microsoft ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "floatLeft";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"floatLeft\" id=\"signInTD\" style=\"width: 420px; position: relative;\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "8";
            this.WindowTitles.Add("Sign in to your Microsoft account");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIThatMicrosoftaccountPane
        {
            get
            {
                if ((this.mUIThatMicrosoftaccountPane == null))
                {
                    this.mUIThatMicrosoftaccountPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIThatMicrosoftaccountPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIThatMicrosoftaccountPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIThatMicrosoftaccountPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "That Microsoft account doesn\'t exist. En";
                    this.mUIThatMicrosoftaccountPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIThatMicrosoftaccountPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "floatLeft";
                    this.mUIThatMicrosoftaccountPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"floatLeft\" style=\"width: 320px;\"";
                    this.mUIThatMicrosoftaccountPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
                    this.mUIThatMicrosoftaccountPane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUIThatMicrosoftaccountPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIThatMicrosoftaccountPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIF1Custom : HtmlCustom
    {
        
        public UIF1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = null;
            this.SearchProperties[UITestControl.PropertyNames.Name] = "f1";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "name=\"f1\" spellcheck=\"false\" method=\"pos";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Sign in to your Microsoft account");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICantaccessyouraccounPane
        {
            get
            {
                if ((this.mUICantaccessyouraccounPane == null))
                {
                    this.mUICantaccessyouraccounPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICantaccessyouraccounPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICantaccessyouraccounPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICantaccessyouraccounPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Can\'t access your account?\r\n\r\nSign in wi";
                    this.mUICantaccessyouraccounPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICantaccessyouraccounPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "section";
                    this.mUICantaccessyouraccounPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"section\"";
                    this.mUICantaccessyouraccounPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "33";
                    this.mUICantaccessyouraccounPane.WindowTitles.Add("Sign in to your Microsoft account");
                    #endregion
                }
                return this.mUICantaccessyouraccounPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICantaccessyouraccounPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAutoSuggestDropDownWindow : WinWindow
    {
        
        public UIAutoSuggestDropDownWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "AutoSuggest Drop-Down";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Auto-Suggest Dropdown";
            this.WindowTitles.Add("AutoSuggest Drop-Down");
            #endregion
        }
        
        #region Properties
        public UIAutoSuggestDropDownWindow1 UIAutoSuggestDropDownWindow1
        {
            get
            {
                if ((this.mUIAutoSuggestDropDownWindow1 == null))
                {
                    this.mUIAutoSuggestDropDownWindow1 = new UIAutoSuggestDropDownWindow1(this);
                }
                return this.mUIAutoSuggestDropDownWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIAutoSuggestDropDownWindow1 mUIAutoSuggestDropDownWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAutoSuggestDropDownWindow1 : WinWindow
    {
        
        public UIAutoSuggestDropDownWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "AutoSuggest Drop-Down";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "SysListView32";
            this.WindowTitles.Add("AutoSuggest Drop-Down");
            #endregion
        }
        
        #region Properties
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemList : WinList
    {
        
        public UIItemList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("AutoSuggest Drop-Down");
            #endregion
        }
        
        #region Properties
        public WinListItem UIVtazhohotmailcomListItem
        {
            get
            {
                if ((this.mUIVtazhohotmailcomListItem == null))
                {
                    this.mUIVtazhohotmailcomListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIVtazhohotmailcomListItem.SearchProperties[WinListItem.PropertyNames.Name] = "v-tazho@hotmail.com";
                    this.mUIVtazhohotmailcomListItem.WindowTitles.Add("AutoSuggest Drop-Down");
                    #endregion
                }
                return this.mUIVtazhohotmailcomListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIVtazhohotmailcomListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UICheckBox1Window UICheckBox1Window
        {
            get
            {
                if ((this.mUICheckBox1Window == null))
                {
                    this.mUICheckBox1Window = new UICheckBox1Window(this);
                }
                return this.mUICheckBox1Window;
            }
        }
        
        public UICheckBox2Window UICheckBox2Window
        {
            get
            {
                if ((this.mUICheckBox2Window == null))
                {
                    this.mUICheckBox2Window = new UICheckBox2Window(this);
                }
                return this.mUICheckBox2Window;
            }
        }
        
        public UICheckBox3Window UICheckBox3Window
        {
            get
            {
                if ((this.mUICheckBox3Window == null))
                {
                    this.mUICheckBox3Window = new UICheckBox3Window(this);
                }
                return this.mUICheckBox3Window;
            }
        }
        
        public UICheckBox4Window UICheckBox4Window
        {
            get
            {
                if ((this.mUICheckBox4Window == null))
                {
                    this.mUICheckBox4Window = new UICheckBox4Window(this);
                }
                return this.mUICheckBox4Window;
            }
        }
        
        public UICheckBox5Window UICheckBox5Window
        {
            get
            {
                if ((this.mUICheckBox5Window == null))
                {
                    this.mUICheckBox5Window = new UICheckBox5Window(this);
                }
                return this.mUICheckBox5Window;
            }
        }
        #endregion
        
        #region Fields
        private UICheckBox1Window mUICheckBox1Window;
        
        private UICheckBox2Window mUICheckBox2Window;
        
        private UICheckBox3Window mUICheckBox3Window;
        
        private UICheckBox4Window mUICheckBox4Window;
        
        private UICheckBox5Window mUICheckBox5Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICheckBox1Window : WinWindow
    {
        
        public UICheckBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UICheckBox1CheckBox
        {
            get
            {
                if ((this.mUICheckBox1CheckBox == null))
                {
                    this.mUICheckBox1CheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUICheckBox1CheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "checkBox1";
                    this.mUICheckBox1CheckBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUICheckBox1CheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUICheckBox1CheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICheckBox2Window : WinWindow
    {
        
        public UICheckBox2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox2";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UICheckBox2CheckBox
        {
            get
            {
                if ((this.mUICheckBox2CheckBox == null))
                {
                    this.mUICheckBox2CheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUICheckBox2CheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "checkBox2";
                    this.mUICheckBox2CheckBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUICheckBox2CheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUICheckBox2CheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICheckBox3Window : WinWindow
    {
        
        public UICheckBox3Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox3";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UICheckBox3CheckBox
        {
            get
            {
                if ((this.mUICheckBox3CheckBox == null))
                {
                    this.mUICheckBox3CheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUICheckBox3CheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "checkBox3";
                    this.mUICheckBox3CheckBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUICheckBox3CheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUICheckBox3CheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICheckBox4Window : WinWindow
    {
        
        public UICheckBox4Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox4";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UICheckBox4CheckBox
        {
            get
            {
                if ((this.mUICheckBox4CheckBox == null))
                {
                    this.mUICheckBox4CheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUICheckBox4CheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "checkBox4";
                    this.mUICheckBox4CheckBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUICheckBox4CheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUICheckBox4CheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICheckBox5Window : WinWindow
    {
        
        public UICheckBox5Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox5";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UICheckBox5CheckBox
        {
            get
            {
                if ((this.mUICheckBox5CheckBox == null))
                {
                    this.mUICheckBox5CheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUICheckBox5CheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "checkBox5";
                    this.mUICheckBox5CheckBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUICheckBox5CheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUICheckBox5CheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICodedUiInternetExploWindow : BrowserWindow
    {
        
        public UICodedUiInternetExploWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "CodedUi";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("CodedUi");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICodedUiDocument UICodedUiDocument
        {
            get
            {
                if ((this.mUICodedUiDocument == null))
                {
                    this.mUICodedUiDocument = new UICodedUiDocument(this);
                }
                return this.mUICodedUiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICodedUiDocument mUICodedUiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICodedUiDocument : HtmlDocument
    {
        
        public UICodedUiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "CodedUi";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Forums/vstudio/en-US/fa5464a3-3942-4670-a3c9-ec0a629500fc/codedui";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://social.msdn.microsoft.com/Forums/vstudio/en-US/fa5464a3-3942-4670-a3c9-ec" +
                "0a629500fc/codedui?forum=vstest";
            this.WindowTitles.Add("CodedUi");
            #endregion
        }
        
        #region Properties
        public UIFff5f59cdfff4e72b7d5Custom UIFff5f59cdfff4e72b7d5Custom
        {
            get
            {
                if ((this.mUIFff5f59cdfff4e72b7d5Custom == null))
                {
                    this.mUIFff5f59cdfff4e72b7d5Custom = new UIFff5f59cdfff4e72b7d5Custom(this);
                }
                return this.mUIFff5f59cdfff4e72b7d5Custom;
            }
        }
        
        public UIFa5464a339424670a3c9Custom UIFa5464a339424670a3c9Custom
        {
            get
            {
                if ((this.mUIFa5464a339424670a3c9Custom == null))
                {
                    this.mUIFa5464a339424670a3c9Custom = new UIFa5464a339424670a3c9Custom(this);
                }
                return this.mUIFa5464a339424670a3c9Custom;
            }
        }
        
        public HtmlHyperlink UIReplyHyperlink
        {
            get
            {
                if ((this.mUIReplyHyperlink == null))
                {
                    this.mUIReplyHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIReplyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIReplyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = "reply";
                    this.mUIReplyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIReplyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Reply ";
                    this.mUIReplyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "void();";
                    this.mUIReplyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Reply";
                    this.mUIReplyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:void();";
                    this.mUIReplyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIReplyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "name=\"reply\" title=\"Reply\" href=\"javascr";
                    this.mUIReplyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "49";
                    this.mUIReplyHyperlink.WindowTitles.Add("CodedUi");
                    #endregion
                }
                return this.mUIReplyHyperlink;
            }
        }
        
        public UIFa5464a339424670a3c9Table UIFa5464a339424670a3c9Table
        {
            get
            {
                if ((this.mUIFa5464a339424670a3c9Table == null))
                {
                    this.mUIFa5464a339424670a3c9Table = new UIFa5464a339424670a3c9Table(this);
                }
                return this.mUIFa5464a339424670a3c9Table;
            }
        }
        
        public HtmlDiv UIUploadClickUploadorDPane
        {
            get
            {
                if ((this.mUIUploadClickUploadorDPane == null))
                {
                    this.mUIUploadClickUploadorDPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIUploadClickUploadorDPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIUploadClickUploadorDPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIUploadClickUploadorDPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Upload\r\nClick Upload or Drag and Drop to";
                    this.mUIUploadClickUploadorDPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIUploadClickUploadorDPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "t-dropzone";
                    this.mUIUploadClickUploadorDPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"t-dropzone\"";
                    this.mUIUploadClickUploadorDPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "235";
                    this.mUIUploadClickUploadorDPane.WindowTitles.Add("CodedUi");
                    #endregion
                }
                return this.mUIUploadClickUploadorDPane;
            }
        }
        
        public HtmlFileInput UIFileFileInput
        {
            get
            {
                if ((this.mUIFileFileInput == null))
                {
                    this.mUIFileFileInput = new HtmlFileInput(this);
                    #region Search Criteria
                    this.mUIFileFileInput.SearchProperties[HtmlFileInput.PropertyNames.Id] = null;
                    this.mUIFileFileInput.SearchProperties[HtmlFileInput.PropertyNames.Name] = "file";
                    this.mUIFileFileInput.SearchProperties[HtmlFileInput.PropertyNames.LabeledBy] = null;
                    this.mUIFileFileInput.FilterProperties[HtmlFileInput.PropertyNames.Title] = null;
                    this.mUIFileFileInput.FilterProperties[HtmlFileInput.PropertyNames.Class] = null;
                    this.mUIFileFileInput.FilterProperties[HtmlFileInput.PropertyNames.ControlDefinition] = "name=\"file\" type=\"file\" autocomplete=\"of";
                    this.mUIFileFileInput.FilterProperties[HtmlFileInput.PropertyNames.TagInstance] = "16";
                    this.mUIFileFileInput.WindowTitles.Add("CodedUi");
                    #endregion
                }
                return this.mUIFileFileInput;
            }
        }
        
        public HtmlHyperlink UICloseHyperlink
        {
            get
            {
                if ((this.mUICloseHyperlink == null))
                {
                    this.mUICloseHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICloseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICloseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICloseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICloseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Close";
                    this.mUICloseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Forums/vstudio/en-US/fa5464a3-3942-4670-a3c9-ec0a629500fc/codedui";
                    this.mUICloseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICloseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://social.msdn.microsoft.com/Forums/vstudio/en-US/fa5464a3-3942-4670-a3c9-ec" +
                        "0a629500fc/codedui?forum=vstest#";
                    this.mUICloseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "t-dialog-close t-link";
                    this.mUICloseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"t-dialog-close t-link\" href=\"#\"";
                    this.mUICloseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "127";
                    this.mUICloseHyperlink.WindowTitles.Add("CodedUi");
                    #endregion
                }
                return this.mUICloseHyperlink;
            }
        }
        
        public HtmlButton UIInsertButton
        {
            get
            {
                if ((this.mUIInsertButton == null))
                {
                    this.mUIInsertButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIInsertButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIInsertButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIInsertButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Insert";
                    this.mUIInsertButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIInsertButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIInsertButton.FilterProperties[HtmlButton.PropertyNames.Class] = "t-dialog-insert t-button";
                    this.mUIInsertButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"t-dialog-insert t-button\"";
                    this.mUIInsertButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIInsertButton.WindowTitles.Add("CodedUi");
                    #endregion
                }
                return this.mUIInsertButton;
            }
        }
        
        public HtmlCustom UIImageURLCustom
        {
            get
            {
                if ((this.mUIImageURLCustom == null))
                {
                    this.mUIImageURLCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIImageURLCustom.SearchProperties["TagName"] = "LI";
                    this.mUIImageURLCustom.SearchProperties["Id"] = null;
                    this.mUIImageURLCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIImageURLCustom.FilterProperties["Class"] = "t-form-text-row";
                    this.mUIImageURLCustom.FilterProperties["ControlDefinition"] = "class=\"t-form-text-row\"";
                    this.mUIImageURLCustom.FilterProperties["InnerText"] = "Image URL";
                    this.mUIImageURLCustom.FilterProperties["TagInstance"] = "84";
                    this.mUIImageURLCustom.WindowTitles.Add("CodedUi");
                    #endregion
                }
                return this.mUIImageURLCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFff5f59cdfff4e72b7d5Custom mUIFff5f59cdfff4e72b7d5Custom;
        
        private UIFa5464a339424670a3c9Custom mUIFa5464a339424670a3c9Custom;
        
        private HtmlHyperlink mUIReplyHyperlink;
        
        private UIFa5464a339424670a3c9Table mUIFa5464a339424670a3c9Table;
        
        private HtmlDiv mUIUploadClickUploadorDPane;
        
        private HtmlFileInput mUIFileFileInput;
        
        private HtmlHyperlink mUICloseHyperlink;
        
        private HtmlButton mUIInsertButton;
        
        private HtmlCustom mUIImageURLCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFff5f59cdfff4e72b7d5Custom : HtmlCustom
    {
        
        public UIFff5f59cdfff4e72b7d5Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "LI";
            this.SearchProperties["Id"] = "fff5f59c-dfff-4e72-b7d5-692eeaede2c3";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "message ";
            this.FilterProperties["ControlDefinition"] = "class=\"message \" id=\"fff5f59c-dfff-4e72-";
            this.FilterProperties["InnerText"] = "0\r\n\r\n \r\n\r\n\r\n\r\n\r\nHi MuhammadSaqib,\r\n\r\n>> ";
            this.FilterProperties["TagInstance"] = "33";
            this.WindowTitles.Add("CodedUi");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIHiMuhammadSaqibbutthPane
        {
            get
            {
                if ((this.mUIHiMuhammadSaqibbutthPane == null))
                {
                    this.mUIHiMuhammadSaqibbutthPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIHiMuhammadSaqibbutthPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIHiMuhammadSaqibbutthPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIHiMuhammadSaqibbutthPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Hi MuhammadSaqib,\r\n\r\n>> but the problem ";
                    this.mUIHiMuhammadSaqibbutthPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIHiMuhammadSaqibbutthPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "body";
                    this.mUIHiMuhammadSaqibbutthPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"body\"";
                    this.mUIHiMuhammadSaqibbutthPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "160";
                    this.mUIHiMuhammadSaqibbutthPane.WindowTitles.Add("CodedUi");
                    #endregion
                }
                return this.mUIHiMuhammadSaqibbutthPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIHiMuhammadSaqibbutthPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFa5464a339424670a3c9Custom : HtmlCustom
    {
        
        public UIFa5464a339424670a3c9Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "LI";
            this.SearchProperties["Id"] = "fa5464a3-3942-4670-a3c9-ec0a629500fc";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "message  root";
            this.FilterProperties["ControlDefinition"] = "class=\"message  root\" id=\"fa5464a3-3942-";
            this.FilterProperties["InnerText"] = "Remove alert  \r\n\r\n|\r\n\r\n Edit  \r\n\r\n|\r\n\r\n ";
            this.FilterProperties["TagInstance"] = "27";
            this.WindowTitles.Add("CodedUi");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIReplyQuoteDeletePane
        {
            get
            {
                if ((this.mUIReplyQuoteDeletePane == null))
                {
                    this.mUIReplyQuoteDeletePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIReplyQuoteDeletePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIReplyQuoteDeletePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIReplyQuoteDeletePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Reply  \r\n\r\n|\r\n\r\n Quote  \r\n\r\n|\r\n\r\n Delete";
                    this.mUIReplyQuoteDeletePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIReplyQuoteDeletePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menu message";
                    this.mUIReplyQuoteDeletePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"menu message\"";
                    this.mUIReplyQuoteDeletePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "115";
                    this.mUIReplyQuoteDeletePane.WindowTitles.Add("CodedUi");
                    #endregion
                }
                return this.mUIReplyQuoteDeletePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIReplyQuoteDeletePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFa5464a339424670a3c9Table : HtmlTable
    {
        
        public UIFa5464a339424670a3c9Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "fa5464a3-3942-4670-a3c9-ec0a629500fcbody";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "bold\r\nitalic\r\nunderline\r\n\r\ninsertUnorder";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"t-widget t-editor t-header\" id=\"fa5464a3-3942-4670-a3c9-ec0a629500fcbody\" " +
                "style=\"height: 300px;\" cellspacing=\"4\" cellpadding=\"0\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "1";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "t-widget t-editor t-header";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("CodedUi");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIInsertImageHyperlink
        {
            get
            {
                if ((this.mUIInsertImageHyperlink == null))
                {
                    this.mUIInsertImageHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIInsertImageHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIInsertImageHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIInsertImageHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIInsertImageHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "insertImage";
                    this.mUIInsertImageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Forums/vstudio/en-US/fa5464a3-3942-4670-a3c9-ec0a629500fc/codedui";
                    this.mUIInsertImageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Insert image";
                    this.mUIInsertImageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://social.msdn.microsoft.com/Forums/vstudio/en-US/fa5464a3-3942-4670-a3c9-ec" +
                        "0a629500fc/codedui?forum=vstest#";
                    this.mUIInsertImageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "t-tool-icon t-insertImage";
                    this.mUIInsertImageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "title=\"Insert image\" class=\"t-tool-icon ";
                    this.mUIInsertImageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "10";
                    this.mUIInsertImageHyperlink.WindowTitles.Add("CodedUi");
                    #endregion
                }
                return this.mUIInsertImageHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIInsertImageHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIChooseFiletoUploadWindow : WinWindow
    {
        
        public UIChooseFiletoUploadWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Choose File to Upload";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public UIShellViewClient UIShellViewClient
        {
            get
            {
                if ((this.mUIShellViewClient == null))
                {
                    this.mUIShellViewClient = new UIShellViewClient(this);
                }
                return this.mUIShellViewClient;
            }
        }
        
        public UIOpenWindow UIOpenWindow
        {
            get
            {
                if ((this.mUIOpenWindow == null))
                {
                    this.mUIOpenWindow = new UIOpenWindow(this);
                }
                return this.mUIOpenWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIShellViewClient mUIShellViewClient;
        
        private UIOpenWindow mUIOpenWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIShellViewClient : WinClient
    {
        
        public UIShellViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Shell Folder View";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public WinList UIItemsViewList
        {
            get
            {
                if ((this.mUIItemsViewList == null))
                {
                    this.mUIItemsViewList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemsViewList.SearchProperties[WinList.PropertyNames.Name] = "Items View";
                    this.mUIItemsViewList.WindowTitles.Add("Choose File to Upload");
                    #endregion
                }
                return this.mUIItemsViewList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemsViewList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOpenWindow : WinWindow
    {
        
        public UIOpenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Choose File to Upload");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
}
